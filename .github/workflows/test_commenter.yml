name: Test Commenter

on:
  workflow_run:
    workflows: ["Test Marketplace Integrations"]
    types: [completed]

permissions:
  actions: read
  contents: read
  pull-requests: write

jobs:
  comment:
    name: Post Test report to PR
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion != 'success' }}

    steps:
    - name: Resolve PR number
      id: findpr
      uses: actions/github-script@v7
      with:
        script: |
          const run = context.payload.workflow_run;
          let pr = (run.pull_requests && run.pull_requests[0]) || null;
          if (!pr) {
            const { owner, repo } = context.repo;
            const sha = run.head_sha;
            const { data: prsBySha } = await github.rest.repos.listPullRequestsAssociatedWithCommit({
              owner, repo, commit_sha: sha
            });
            pr = prsBySha[0] || null;
          }
          if (!pr) {
            const headRepo = run.head_repository && run.head_repository.full_name;
            const headBranch = run.head_branch;
            if (headRepo && headBranch) {
              const headParam = `${headRepo.split('/')[0]}:${headBranch}`;
              const { owner, repo } = context.repo;
              const { data: openPRs } = await github.rest.pulls.list({
                owner, repo, state: 'open', head: headParam, per_page: 1
              });
              pr = openPRs[0] || null;
              if (!pr) {
                const { data: closedPRs } = await github.rest.pulls.list({
                  owner, repo, state: 'closed', head: headParam, per_page: 1
                });
                pr = closedPRs[0] || null;
              }
            }
          }
          if (!pr) {
            core.setFailed('Could not resolve PR for this workflow_run.');
          } else {
            core.setOutput('pr_number', String(pr.number));
          }

    - name: Find test-report artifact
      id: meta
      uses: actions/github-script@v7
      with:
        script: |
          const { owner, repo } = context.repo;
          const run_id = context.payload.workflow_run.id;
          const { data: list } = await github.rest.actions.listWorkflowRunArtifacts({ owner, repo, run_id });
          const art = list.artifacts.find(a => a.name === 'test-report');
          if (!art) core.setFailed('test-report artifact not found.');
          else core.setOutput('artifact_id', String(art.id));

    - name: Download artifact zip
      id: dl
      uses: actions/github-script@v7
      env:
        ART_ID: ${{ steps.meta.outputs.artifact_id }}
      with:
        script: |
          const fs = require('fs');
          const { owner, repo } = context.repo;
          const id = Number(process.env.ART_ID);
          const { data } = await github.rest.actions.downloadArtifact({
            owner, repo, artifact_id: id, archive_format: 'zip'
          });
          fs.writeFileSync('artifact.zip', Buffer.from(data));

    - name: Unzip artifact
      run: unzip -o artifact.zip -d artifacts

    - name: Post PR comment
      uses: actions/github-script@v7
      env:
        PR_NUMBER: ${{ steps.findpr.outputs.pr_number }}
      with:
        script: |
          const fs = require('fs');
          const pr = Number(process.env.PR_NUMBER);
          const body = fs.readFileSync('artifacts/test_report.md', 'utf8');
          const finalComment =
            '‚ùå **Integration Tests Failed**\n' +
            '<details>\n' +
            '<summary>Click to view the full test report</summary>\n\n' +
            '---\n' +
            body +
            '\n</details>';
          await github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: pr,
            body: finalComment
          });
