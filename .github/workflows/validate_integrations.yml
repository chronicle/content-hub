name: Validate marketplace integrations
permissions:
  contents: read
  pull-requests: write # Add write permission for pull requests
  issues: write        # Some comment actions might also need issues:write

on:
  push:
    branches:
    - '**'
  pull_request:
    branches:
    - '**'

jobs:
  mp_validates:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install mp package
      run: |
        pip install --upgrade pip
        # This installs your local 'mp' tool so it can be used in the command line
        pip install -e ./packages/mp

    - name: Validates all integrations
      id: run_validation # Add an ID to this step to capture its output
      shell: bash
      # Use `tee` to capture both stdout and the exit code for later use
      # Also, make sure your 'mp validate' command's output is something you want in the comment.
      # If it's a report, you might need to extract relevant parts or generate a summary.
      # For now, we'll just capture the entire output.
      run: |
        mp config --marketplace-path . --processes 10 --display-config
        # Capture the output of the validation command
        VALIDATION_OUTPUT=$(mp validate --repository third_party --only-pre-build 2>&1 || true) # Capture stderr too, and allow to fail
        echo "validation_result<<EOF" >> $GITHUB_OUTPUT
        echo "$VALIDATION_OUTPUT" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
        # Also store the exit code to determine success/failure for the comment
        echo "validation_status=$?" >> $GITHUB_OUTPUT


    - name: Read Validation Report for Comment
      id: read_report_file
      if: always() # Run even if previous steps fail, to post report
      run: |
        # Check if the report file exists before attempting to read it
        if [ -f "./artifacts/validation-report.html" ]; then
          REPORT_CONTENT=$(cat "./artifacts/validation-report.html")
          # For large HTML reports, you might want to truncate or summarize.
          # For a comment, plain text or a link might be more suitable.
          # Here, we'll try to put the whole content, but be mindful of comment size limits.
          echo "html_report_content<<EOF" >> $GITHUB_OUTPUT
          echo "$REPORT_CONTENT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        else
          echo "html_report_content=No detailed HTML report generated." >> $GITHUB_OUTPUT
        fi

    - name: Upload Report Artifact
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: validation-report
        path: ./artifacts/validation-report.html
        retention-days: 2

    - name: Comment on Pull Request
      if: github.event_name == 'pull_request' # Only run on pull requests
      uses: peter-evans/create-or-update-comment@v4
      with:
        issue-number: ${{ github.event.pull_request.number }}
        comment-id: validation-report-comment # Use a unique ID to update the same comment
        # You can choose 'replace' or 'append' for edit-mode
        edit-mode: replace
        body: |
          ### Marketplace Integrations Validation Report

          **Workflow Run:** [${{ github.run_id }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

          **Validation Command Output:**
          ```
          ${{ steps.run_validation.outputs.validation_result }}
          ```

          **Status:**
          ${{ steps.run_validation.outputs.validation_status == '0' && ':white_check_mark: Validation passed successfully!' || ':x: Validation failed!' }}

          ${{ steps.read_report_file.outputs.html_report_content != 'No detailed HTML report generated.' && '
          A detailed HTML validation report has been generated. You can download it as an [artifact here](' + github.server_url + '/' + github.repository + '/actions/runs/' + github.run_id + '/artifacts/validation-report) (look for `validation-report`).
          ' || '' }}
          
          ---
          _This comment is automatically generated by the "Validate marketplace integrations" workflow._