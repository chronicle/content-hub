name: Validate marketplace integrations

# Define permissions for the GITHUB_TOKEN.
# 'contents: read' is needed for actions/checkout to clone the repository.
# 'issues: write' is the minimal permission required to add comments to PRs or Issues.
# This is more restrictive and secure than 'pull-requests: write', as it prevents
# the workflow from performing actions like merging pull requests.
permissions:
  contents: read
  issues: write

on:
  push:
    branches:
    - '**' # Trigger on direct pushes to any branch in the repository.
  # Use 'pull_request_target' for Pull Requests, especially those from forks.
  # This event runs in the context of the base repository and grants the
  # permissions defined above, enabling the workflow to comment on PRs.
  # It will still require manual approval for external contributors from forks for security.
  pull_request_target:
    types: [opened, synchronize] # Trigger when a PR is opened or new commits are pushed to it.

jobs:
  # Changed job name from 'mp_validates' to 'mp-validates' for consistency
  # with GitHub Actions best practices (using hyphens instead of underscores).
  mp-validates:
    runs-on: ubuntu-latest

    steps:
    # Conditional checkout for 'pull_request_target' events:
    # This step runs ONLY when the workflow is triggered by a pull request.
    # It checks out the specific commit from the pull request's head (the contributor's branch).
    # This is CRUCIAL for security (ensuring we run the reviewed code) and correctness
    # (ensuring we validate the actual changes in the PR).
    - name: Checkout PR head (for pull_request_target)
      if: github.event_name == 'pull_request_target'
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        ref: ${{ github.event.pull_request.head.sha }}

    # Conditional checkout for 'push' events:
    # This step runs ONLY when the workflow is triggered by a direct push to a branch.
    # It checks out the current state of the branch that was pushed to.
    - name: Checkout current branch (for push)
      if: github.event_name == 'push'
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        # 'github.ref' refers to the branch or tag that triggered the push.
        # This maintains the original behavior for direct pushes.
        ref: ${{ github.ref }}

    # --- DEBUG STEP START ---
    - name: Debug: Print Event Name
      run: |
        echo "GitHub Event Name: ${{ github.event_name }}"
    # --- DEBUG STEP END ---

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install mp package
      run: |
        pip install --upgrade pip
        pip install -e ./packages/mp

    - name: Run Validations
      id: validate
      continue-on-error: true
      shell: bash
      env:
        # Pass the PR head SHA as an environment variable to the Python script.
        # This is necessary ONLY for 'pull_request_target' events because 'GITHUB_SHA'
        # points to the base branch's SHA in that context, not the PR's head SHA.
        # Your Python script must be updated to read 'PR_HEAD_SHA' instead of 'GITHUB_SHA'
        # when running in a PR context for validation logic.
        PR_HEAD_SHA: ${{ github.event.pull_request.head.sha }}
      run: |
        mp config --marketplace-path . --processes 10 --display-config
        mp validate --repository third_party --only-pre-build

    - name: Comment on PR with Collapsible Report
      # This step will now succeed because the workflow has 'issues: write' permission.
      # The condition ensures it only runs for 'pull_request_target' events (i.e., PRs)
      # and only if the validation step failed.
      if: github.event_name == 'pull_request_target' && steps.validate.outcome == 'failure'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const reportPath = './artifacts/validation_report.md';
          const reportBody = fs.readFileSync(reportPath, 'utf8');

          const finalComment = `‚ùå **Marketplace Validation Failed**
          <details>
          <summary>Click to view the full validation report</summary>
          ---
          ${reportBody}
          </details>`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: finalComment
          });

    - name: Fail the workflow if validation failed
      # This step runs for both push and pull_request_target events if validation failed.
      if: steps.validate.outcome == 'failure'
      run: |
        echo "Validation step failed. Failing the workflow."
        exit 1

    - name: Upload Markdown Report Artifact
      # This step runs regardless of success or failure, for both push and PR events.
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: validation-report-md
        path: ./artifacts/validation_report.md
        retention-days: 2
