name: Post Validation Comment

on:
  workflow_run:
    workflows: ["Validate Marketplace Integrations"]
    types:
    - completed

permissions:
  pull-requests: write

jobs:
  comment_on_pr:
    runs-on: ubuntu-latest
    if: >
      github.event.workflow_run.event == 'pull_request' &&
      github.event.workflow_run.conclusion == 'failure'

    steps:
    - name: Download Validation Report Artifact
      uses: actions/download-artifact@v4
      with:
        name: validation-report-md
        github-token: ${{ secrets.GITHUB_TOKEN }}
        run-id: ${{ github.event.workflow_run.id }}

    - name: Comment on PR with Collapsible Report
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const fs = require('fs');
          // Safely get the pull request number by passing the whole pull_requests object
          const pull_requests = ${{ toJSON(github.event.workflow_run.pull_requests) }};
          const prNumber = pull_requests.length > 0 ? pull_requests[0].number : null;
          
          if (!prNumber) {
            console.log('Could not find an associated pull request. Skipping comment.');
            return;
          }
          
          const reportPath = 'validation_report.md'; // It's downloaded to the workspace root
          if (!fs.existsSync(reportPath)) {
            console.log(`Report file not found at ${reportPath}. Posting a fallback comment.`);
            const fallbackComment = `❌ **Marketplace Validation Failed**\n\nThe validation report artifact could not be found. Please check the logs of the 'Validate Marketplace Integrations' workflow run for details.`;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: fallbackComment
            });
            return;
          }
          
          const reportBody = fs.readFileSync(reportPath, 'utf8');
          
          const finalComment = `❌ **Marketplace Validation Failed**
          <details>
          <summary>Click to view the full validation report</summary>
          ---
          ${reportBody}
          </details>`;
          
          await github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: prNumber,
            body: finalComment
          });
